(Main.fibonacci)
@0
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@2
D=A
@SP
A=M
M=D
@SP
AM=M+1
// lt 
@SP
AM=M-1
@SP
A=M
D=M
@SP
AM=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
@SP
A=M
D=M
@CMPTRUE1
D;JLT
@SP
A=M
M=0
@SP
AM=M+1
@END1
0;JMP
(CMPTRUE1)
@SP
A=M
M=-1
@SP
AM=M+1
(END1)
@SP
AM=M-1
@SP
A=M
D=M
@IF_TRUE
D;JNE
@IF_FALSE
0;JMP
(IF_TRUE)
@0
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
// Frame = LCL 
@R1
D=M
@R15
M=D
// RET = *(Frame - 5) 
@5
A=D-A
D=M
@R14
M=D
// *ARG = pop() 
@SP
AM=M-1
@SP
A=M
D=M
@R2
A=M
M=D
// SP = ARG+1 
@R2
AM=M+1
D=M
// that 
@R15
AM=M-1
D=M
@R4
M=D
// this 
@R15
AM=M-1
D=M
@R3
M=D
// argument 
@R15
AM=M-1
D=M
@R2
M=D
// local 
@R15
AM=M-1
D=M
@R1
M=D
// jump to return 
@R14
A=M
0;JMP
(IF_FALSE)
@0
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@2
D=A
@SP
A=M
M=D
@SP
AM=M+1
// sub 
@SP
AM=M-1
@SP
A=M
D=M
@SP
AM=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@6
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Main.fibonacci
0;JMP
@0
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@SP
A=M
M=1
@SP
AM=M+1
// sub 
@SP
AM=M-1
@SP
A=M
D=M
@SP
AM=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@6
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Main.fibonacci
0;JMP
// add 
@SP
AM=M-1
@SP
A=M
D=M
@SP
AM=M-1
@SP
A=M
A=M
D=D+A
@SP
A=M
M=D
@SP
AM=M+1
// Frame = LCL 
@R1
D=M
@R15
M=D
// RET = *(Frame - 5) 
@5
A=D-A
D=M
@R14
M=D
// *ARG = pop() 
@SP
AM=M-1
@SP
A=M
D=M
@R2
A=M
M=D
// SP = ARG+1 
@R2
AM=M+1
D=M
// that 
@R15
AM=M-1
D=M
@R4
M=D
// this 
@R15
AM=M-1
D=M
@R3
M=D
// argument 
@R15
AM=M-1
D=M
@R2
M=D
// local 
@R15
AM=M-1
D=M
@R1
M=D
// jump to return 
@R14
A=M
0;JMP
(Sys.init)
@4
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@6
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Main.fibonacci
0;JMP
(WHILE)
@WHILE
0;JMP
