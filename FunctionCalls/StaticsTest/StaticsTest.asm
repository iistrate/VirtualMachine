(Class1.set)
@0
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@StaticsTest.0
D=A
@R13
M=D
@SP
AM=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@1
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@StaticsTest.1
D=A
@R13
M=D
@SP
AM=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@SP
A=M
M=0
@SP
AM=M+1
// Frame = LCL 
@R1
D=M
@R15
M=D
// RET = *(Frame - 5) 
@5
A=D-A
D=M
@R14
M=D
// *ARG = pop() 
@SP
AM=M-1
@SP
A=M
D=M
@R2
A=M
M=D
// SP = ARG+1 
@R2
AM=M+1
D=M
// that 
@R15
AM=M-1
D=M
@R4
M=D
// this 
@R15
AM=M-1
D=M
@R3
M=D
// argument 
@R15
AM=M-1
D=M
@R2
M=D
// local 
@R15
AM=M-1
D=M
@R1
M=D
// jump to return 
@R14
A=M
0;JMP
(Class1.get)
@StaticsTest.0
D=A
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@StaticsTest.1
D=A
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
// sub 
@SP
AM=M-1
@SP
A=M
D=M
@SP
AM=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
AM=M+1
// Frame = LCL 
@R1
D=M
@R15
M=D
// RET = *(Frame - 5) 
@5
A=D-A
D=M
@R14
M=D
// *ARG = pop() 
@SP
AM=M-1
@SP
A=M
D=M
@R2
A=M
M=D
// SP = ARG+1 
@R2
AM=M+1
D=M
// that 
@R15
AM=M-1
D=M
@R4
M=D
// this 
@R15
AM=M-1
D=M
@R3
M=D
// argument 
@R15
AM=M-1
D=M
@R2
M=D
// local 
@R15
AM=M-1
D=M
@R1
M=D
// jump to return 
@R14
A=M
0;JMP
(Class2.set)
@0
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@StaticsTest.0
D=A
@R13
M=D
@SP
AM=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@1
D=A
@R2
D=D+M
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@StaticsTest.1
D=A
@R13
M=D
@SP
AM=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@SP
A=M
M=0
@SP
AM=M+1
// Frame = LCL 
@R1
D=M
@R15
M=D
// RET = *(Frame - 5) 
@5
A=D-A
D=M
@R14
M=D
// *ARG = pop() 
@SP
AM=M-1
@SP
A=M
D=M
@R2
A=M
M=D
// SP = ARG+1 
@R2
AM=M+1
D=M
// that 
@R15
AM=M-1
D=M
@R4
M=D
// this 
@R15
AM=M-1
D=M
@R3
M=D
// argument 
@R15
AM=M-1
D=M
@R2
M=D
// local 
@R15
AM=M-1
D=M
@R1
M=D
// jump to return 
@R14
A=M
0;JMP
(Class2.get)
@StaticsTest.0
D=A
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
@StaticsTest.1
D=A
A=D
D=M
@SP
A=M
M=D
@SP
AM=M+1
// sub 
@SP
AM=M-1
@SP
A=M
D=M
@SP
AM=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
AM=M+1
// Frame = LCL 
@R1
D=M
@R15
M=D
// RET = *(Frame - 5) 
@5
A=D-A
D=M
@R14
M=D
// *ARG = pop() 
@SP
AM=M-1
@SP
A=M
D=M
@R2
A=M
M=D
// SP = ARG+1 
@R2
AM=M+1
D=M
// that 
@R15
AM=M-1
D=M
@R4
M=D
// this 
@R15
AM=M-1
D=M
@R3
M=D
// argument 
@R15
AM=M-1
D=M
@R2
M=D
// local 
@R15
AM=M-1
D=M
@R1
M=D
// jump to return 
@R14
A=M
0;JMP
(Sys.init)
@6
D=A
@SP
A=M
M=D
@SP
AM=M+1
@8
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@7
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Class1.set
0;JMP
@0
D=A
@R5
D=D+A
@R13
M=D
@SP
AM=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@23
D=A
@SP
A=M
M=D
@SP
AM=M+1
@15
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@7
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Class2.set
0;JMP
@0
D=A
@R5
D=D+A
@R13
M=D
@SP
AM=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@5
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Class1.get
0;JMP
@R2
D=A
@SP
A=M
M=D
@SP
AM=M+1
@R1
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R2
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R3
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
@R4
D=M
A=M
@SP
A=M
M=D
@SP
AM=M+1
// ARG = (SP-n-5) 
@5
D=A
@SP
A=M
D=A-D
@R2
M=D
// LCL=SP 
@SP
A=M
D=A
@R1
M=D
// goto fname 
@Class2.get
0;JMP
(WHILE)
@WHILE
0;JMP
